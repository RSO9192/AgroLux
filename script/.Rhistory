theme(legend.position = "none")
plot_list[[f]][[c]] <- p
if (f==2) {
out <- plot_list[[1]][[c]] +   plot_list[[2]][[c]]
#ggsave(plot=out, file=paste0("plots_rice/", var,"_rice.svg"), width = 18, height = 10, units = "cm")
}
}
}
out_df <- map(out_df, function(x) {
x %>%
select(Year1,Yield,WPet, Cycle, ETo, soil, RCP, Station, date_f) %>%
mutate(Station= case_when(Station==1212 ~ "Terai (1212)",
Station==1311~ "Terai (1311)"),
RCP=case_when(RCP=="RCP45" ~ "RCP 4.5",
RCP=="RCP85" ~ "RCP 8.5")) %>%
mutate(date_f=ifelse(date_f=="15June", "15thJune", "15thJuly"), date_f=factor(date_f, levels = c("15thJune", "15thJuly")))
})
# fitting linear mdoels to understand importance of variables
var_imp <- map(1:2, function(pos) {
map_dbl(c("Station", "soil", "date_f", "RCP"), function(var) {
mod_net <- lm(out_df[[pos]]$Yield~out_df[[pos]][,var])
summary(mod_net)$adj.r.squared
})
})
names(var_imp) <- c("Net", "Rainfed")
plots <- map(c("Rainfed", "Net"), function(x) { enframe(var_imp) %>%
unnest(value) %>%
filter(name==x) %>%
mutate(var=c("location", "soil", "transplant date", "RCP")) %>%
mutate(var = fct_reorder(var, desc(value))) %>%
ggplot(aes(var, value))+
theme_Publication()+
geom_bar(stat="identity", color="black")+
ylab(expression(Adjusted~R^{"2"})) +
xlab("")+
ylim(-0.01,0.35)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle(ifelse(x=="Net", "Net irrigation", x))}) #+  ggsave("../script/plots_wheat/R2.png")
(comb <- plots[[2]]+plots[[1]])
ggsave(comb, filename = "plots_rice/rice_R2.png", height = 10, width = 18, units = "cm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(glue)
library(gtools)
library(xlsx)
library(mgcv)
library(gridExtra)
library(RColorBrewer)
library(patchwork)
library(lemon)
source("~/theme_publication.R")
library(grid)
library(tidytext)
plot_list <- list(net=list(), rainfed=list())
out_df <- list()
f <- 0
for (folder in c("net", "rainfed")) {
f <- f+1
header <- read.table(paste0("../data/Wheat/", folder,"/1103_RCP45_", folder, "_15Nov_loamPRMseason.OUT"), skip = 2, nrows = 1) # all header are the same, so we can just use one header for all files
header <- as.vector(t(header))
files <- list.files(paste0("../data/Wheat/",folder, "/")) # getting files name
list_all_output <- lapply(files, function(x) {read.table(glue("../data/Wheat/{folder}/{x}"), skip = 4)}) # reading all dataframes into a list
names(list_all_output) <- files
str_match(names(list_all_output)[1],"loam|sandy\\D+") %>%
str_remove(., "PRMseason.OUT")
# Here we are changing colnames, and adding variable names
for (df in 1:length(list_all_output)) {
colnames(list_all_output[[df]]) <- header
list_all_output[[df]]$Station <- as.character(str_match(names(list_all_output[df]), "\\d+"))
list_all_output[[df]]$RCP <- as.character(str_match(names(list_all_output[df]), "RCP\\d+"))
list_all_output[[df]]$soil <- as.character(str_match(names(list_all_output[df]),"loam|sandy\\D+") %>%
str_remove(., "PRMseason.OUT"))
list_all_output[[df]]$date <- str_match(names(list_all_output[df]), "_(\\d+.*)_") [,2]
}
results_cw <- do.call(rbind, list_all_output)
rownames(results_cw) <- NULL
out_df[[f]] <- results_cw
# plotting
c <- 0
for (var in c("Yield", "WPet", "Cycle", "ETo")) {
label <- c("Yield (ton/ha)", "CWP (kg/m^3)", "Cycle's length (Days)", "ETo (mm)")
limits <- c(ylim(0,8), ylim(0,2.5), ylim(0,300), ylim(200,900))
titles <- c("Net irrigation", "Rainfed")
c <- c+1
p <- results_cw %>%
select(Year1,Yield,WPet, Cycle, ETo, soil, RCP, Station, date) %>%
mutate(Station= case_when(Station==1212 ~ "Terai (1212)",
Station==1311~ "Terai (1311)",
Station==1206 ~ "Mid-hills (1206)",
Station==1103 ~ "High-hills (1103)"), RCP=case_when(RCP=="RCP45" ~ "RCP 4.5",
RCP=="RCP85" ~ "RCP 8.5")) %>%
mutate(date=paste0(str_extract(date, "\\d+"), "th",str_extract(date, "\\D+"))) %>%
mutate(date=ifelse(date=="1thNov", "1stNov", date), date=ifelse(date=="1thOct", "1stOct", date)) %>%
mutate(date_f=factor(.$date, levels=c("1stOct",'1stNov','15thNov', "15thDec"))) %>%
mutate(Cycle=ifelse(Cycle<0, 0, Cycle)) %>%
ggplot(aes_string("Year1",var)) +
geom_point(aes(color=soil, shape=RCP), size=1, alpha=0.2)+
geom_line(aes(color=soil, linetype=RCP), stat="smooth",size=1, method = "lm", se = FALSE)+
facet_rep_grid(Station~ date_f, repeat.tick.labels = "all")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),text = element_text(size=10))+
theme(panel.border=element_blank(), axis.line=element_line())+
scale_color_manual(values = c("dodgerblue1","Red", "darkgreen"))+
ylab(paste0(label[c]))+
limits[[c]]+
theme(legend.title = element_blank(),legend.key.width = unit(1, "cm"))+
guides(lty = guide_legend(override.aes = list(col = 'darkgray'))) + # change line type blue color to black
xlab("Year")+
scale_x_continuous(expand=c(0,0))+
ggtitle(titles[f])+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position ="none")
plot_list[[f]][[c]] <- p
if (f==2) {
out <- plot_list[[1]][[c]] +   plot_list[[2]][[c]]
#ggsave(plot=out, file=paste0("plots_wheat/", var,"_wheat.svg"), width = 19, height = 17, units = "cm")
}
}
}
out_df <- map(out_df, function(x) {
x %>%
select(Year1,Yield, soil, RCP, Station, date) %>%
mutate(Station= case_when(Station==1212 ~ "Terai (1212)",
Station==1311~ "Terai (1311)",
Station==1206 ~ "Mid-hills (1206)",
Station==1103 ~ "High-hills (1103)"), RCP=case_when(RCP=="RCP45" ~ "RCP 4.5",
RCP=="RCP85" ~ "RCP 8.5")) %>%
mutate(date=paste0(str_extract(date, "\\d+"), "th",str_extract(date, "\\D+"))) %>%
mutate(date=ifelse(date=="1thNov", "1stNov", date), date=ifelse(date=="1thOct", "1stOct", date)) %>%
mutate(date_f=factor(.$date, levels=c("1stOct",'1stNov','15thNov', "15thDec")))
})
# fitting linear mdoels to understand importance of variables
var_imp <- map(1:2, function(pos) {
map_dbl(c("Station", "soil", "date_f", "RCP"), function(var) {
mod_net <- lm(out_df[[pos]]$Yield~out_df[[pos]][,var])
summary(mod_net)$adj.r.squared
})
})
names(var_imp) <- c("Net", "Rainfed")
plots <- map(c("Rainfed", "Net"), function(x) { enframe(var_imp) %>%
unnest(value) %>%
filter(name==x) %>%
mutate(var=c("location", "soil", "sowing date", "RCP")) %>%
mutate(var = fct_reorder(var, desc(value))) %>%
ggplot(aes(var, value))+
theme_Publication()+
geom_bar(stat="identity", color="black")+
ylab(expression(Adjusted~R^{"2"})) +
xlab("")+
ylim(0,0.65)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle(ifelse(x=="Net", "Net irrigation", x))}) #+  ggsave("../script/plots_wheat/R2.png")
(comb <- plots[[2]]+plots[[1]])
ggsave(comb, filename = "plots_wheat/wheat_R2.png", height = 9, width = 18, units = "cm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(glue)
library(gtools)
library(xlsx)
library(grid)
library(mgcv)
library(gridExtra)
library(RColorBrewer)
library(patchwork)
library(lemon)
source("~/theme_publication.R")
plot_list <- list(net=list(), rainfed=list())
out_df <- list()
f <- 0
for (folder in c("net", "rainfed")) {
f <- f+1
header <- read.table(paste0("../data/Maize/", folder,"/1206_RCP45_", folder, "_15April_sandyloamPRMseason.OUT"), skip = 2, nrows = 1) # all header are the same, so we can just use one header for all files
header <- as.vector(t(header))
files <- list.files(paste0("../data/Maize/",folder, "/")) # getting files name
list_all_output <- lapply(files, function(x) {read.table(glue("../data/Maize/{folder}/{x}"), skip = 4)}) # reading all files
names(list_all_output) <- files
# Here we are changing colnames, and adding variable names
for (df in 1:length(list_all_output)) {
colnames(list_all_output[[df]]) <- header
list_all_output[[df]]$Station <- as.character(str_match(names(list_all_output[df]), "\\d+"))
list_all_output[[df]]$RCP <- as.character(str_match(names(list_all_output[df]), "RCP\\d+"))
list_all_output[[df]]$soil <- as.character(str_match(names(list_all_output[df]),"loam|sandy\\D+")  %>%
str_remove(., "PRMseason.OUT"))
list_all_output[[df]]$date <- str_match(names(list_all_output[df]), "_(\\d+.*)_") [,2]
}
results_cw <- do.call(rbind, list_all_output)
rownames(results_cw) <- NULL
out_df[[f]] <- results_cw
# plotting
c <- 0
for (var in c("Yield", "WPet", "Cycle", "ETo")) {
label <- c("Yield (ton/ha)", "CWP (kg/m^3)", "Cycle's length (Days)", " ETo (mm)")
limits <- c(ylim(0,6), ylim(0,3), ylim(80,160), ylim(200,700))
titles <- c("Net irrigation", "Rainfed")
c <- c+1
p <- results_cw %>%
select(Year1,Yield,WPet, Cycle, ETo, soil, RCP, Station, date) %>%
mutate(Station= case_when(Station==1212 ~ "Terai (1212)",
Station==1311~ "Terai (1311)",
Station==1206~ "Mid-hills (1206)"),
RCP=case_when(RCP=="RCP45" ~ "RCP 4.5",
RCP=="RCP85" ~ "RCP 8.5"), date=paste0(str_extract(date, "\\d+"), "th",str_extract(date, "\\D+"))) %>%
mutate(date_f=factor(.$date, levels=c('15thMarch','15thApril', "15thMay"))) %>%
mutate(Cycle=ifelse(Cycle<0, 0, Cycle)) %>%
ggplot(aes_string("Year1",var)) +
geom_point(aes(color=soil, shape=RCP), size=1, alpha=0.2)+
geom_line(aes(color=soil, linetype=RCP), stat="smooth",size=1, method = "lm", se = FALSE)+
facet_rep_grid(Station~ date_f, repeat.tick.labels = "all")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),text = element_text(size=10))+
theme(panel.border=element_blank(), axis.line=element_line())+
scale_color_manual(values = c("dodgerblue1","Red", "darkgreen"))+
ylab(paste0(label[c]))+
limits[[c]]+
theme(legend.title = element_blank(),legend.key.width = unit(1, "cm"))+
guides(lty = guide_legend(override.aes = list(col = 'darkgray'))) + # change line type blue color to black
xlab("Year")+
scale_x_continuous(expand=c(0,0))+
ggtitle(titles[f])+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "none")
plot_list[[f]][[c]] <- p
if (f==2) {
out <- plot_list[[1]][[c]] +   plot_list[[2]][[c]]
#ggsave(plot=out, file=paste0("plots_maize/", var,"_maize.svg"), width = 18, height = 12, units = "cm")
}
}
}
View(limits)
View(list_all_output)
list_all_output[[1]]
View(list_all_output)
saveRDS(list_all_output, file = "../script/maize.rds")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(glue)
library(gtools)
library(xlsx)
library(mgcv)
library(gridExtra)
library(grid)
library(RColorBrewer)
library(lemon)
library(patchwork)
source("~/theme_publication.R")
f <- 0
plot_list <- list(net=list(), rainfed=list())
out_df <- list()
for (folder in c("net", "rainfed")) {
f <- f+1
header <- read.table(paste0("../data/Rice/", folder,"/1212_RCP45_", folder, "_15July_sandyloamPRMseason.OUT"), skip = 2, nrows = 1) # all header are the same, so we can just use one header for all files
header <- as.vector(t(header))
files <- list.files(paste0("../data/Rice/",folder, "/")) # getting files name
list_all_output <- lapply(files, function(x) {read.table(glue("../data/Rice/{folder}/{x}"), skip = 4)}) # reading all files
names(list_all_output) <- files
# Here we are changing colnames, and adding variable names
for (df in 1:length(list_all_output)) {
colnames(list_all_output[[df]]) <- header
list_all_output[[df]]$Station <- as.character(str_match(names(list_all_output[df]), "\\d+"))
list_all_output[[df]]$RCP <- as.character(str_match(names(list_all_output[df]), "RCP\\d+"))
list_all_output[[df]]$soil <- as.character(str_match(names(list_all_output[df]),"sandy\\D+") %>%
str_remove(., "PRMseason.OUT"))
list_all_output[[df]]$date <- str_match(names(list_all_output[df]), "_(\\d+.*)_") [,2]
}
results_cw <- do.call(rbind, list_all_output)
rownames(results_cw) <- NULL
results_cw$date_f = factor(results_cw$date, levels=c('15June','15July'))
out_df[[f]] <- results_cw
# plotting
c <- 0
for (var in c("Yield", "WPet", "Cycle", "ETo")) {
label <- c("Yield (ton/ha)", "CWP (kg/m^3)", "Cycle's length (Days)", " ETo (mm)")
limits <- c(ylim(0,9), ylim(0,3), ylim(0,200), ylim(300,600))
titles <- c("Net irrigation", "Rainfed")
c <- c+1
p <- results_cw %>%
select(Year1,Yield,WPet, Cycle, ETo, soil, RCP, Station, date_f) %>%
mutate(Station= case_when(Station==1212 ~ "Terai (1212)",
Station==1311~ "Terai (1311)"),
RCP=case_when(RCP=="RCP45" ~ "RCP 4.5",
RCP=="RCP85" ~ "RCP 8.5")) %>%
mutate(date_f=ifelse(date_f=="15June", "15thJune", "15thJuly"), date_f=factor(date_f, levels = c("15thJune", "15thJuly"))) %>%
mutate(Cycle=ifelse(Cycle<0, 0, Cycle)) %>%
ggplot(aes_string("Year1",var)) +
geom_point(aes(color=soil, shape=RCP), size=1, alpha=0.2)+
geom_line(aes(color=soil, linetype=RCP), stat="smooth",size=1, method = "lm", se = FALSE)+
facet_rep_grid(Station~ date_f, repeat.tick.labels = "all")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),text = element_text(size=10))+
theme(panel.border=element_blank(), axis.line=element_line())+
scale_color_manual(values = c("dodgerblue1","Red", "darkgreen"))+
ylab(paste0(label[c]))+
limits[[c]]+
theme(legend.title = element_blank(),legend.key.width = unit(1, "cm"))+
guides(lty = guide_legend(override.aes = list(col = 'darkgray'))) + # change line type blue color to black
xlab("Year")+
scale_x_continuous(expand=c(0,0))+
ggtitle(titles[f])+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "none")
plot_list[[f]][[c]] <- p
if (f==2) {
out <- plot_list[[1]][[c]] +   plot_list[[2]][[c]]
#ggsave(plot=out, file=paste0("plots_rice/", var,"_rice.svg"), width = 18, height = 10, units = "cm")
}
}
}
saveRDS(list_all_output, file = "../script/rice.rds")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(glue)
library(gtools)
library(xlsx)
library(mgcv)
library(gridExtra)
library(RColorBrewer)
library(patchwork)
library(lemon)
source("~/theme_publication.R")
library(grid)
library(tidytext)
plot_list <- list(net=list(), rainfed=list())
out_df <- list()
f <- 0
for (folder in c("net", "rainfed")) {
f <- f+1
header <- read.table(paste0("../data/Wheat/", folder,"/1103_RCP45_", folder, "_15Nov_loamPRMseason.OUT"), skip = 2, nrows = 1) # all header are the same, so we can just use one header for all files
header <- as.vector(t(header))
files <- list.files(paste0("../data/Wheat/",folder, "/")) # getting files name
list_all_output <- lapply(files, function(x) {read.table(glue("../data/Wheat/{folder}/{x}"), skip = 4)}) # reading all dataframes into a list
names(list_all_output) <- files
str_match(names(list_all_output)[1],"loam|sandy\\D+") %>%
str_remove(., "PRMseason.OUT")
# Here we are changing colnames, and adding variable names
for (df in 1:length(list_all_output)) {
colnames(list_all_output[[df]]) <- header
list_all_output[[df]]$Station <- as.character(str_match(names(list_all_output[df]), "\\d+"))
list_all_output[[df]]$RCP <- as.character(str_match(names(list_all_output[df]), "RCP\\d+"))
list_all_output[[df]]$soil <- as.character(str_match(names(list_all_output[df]),"loam|sandy\\D+") %>%
str_remove(., "PRMseason.OUT"))
list_all_output[[df]]$date <- str_match(names(list_all_output[df]), "_(\\d+.*)_") [,2]
}
results_cw <- do.call(rbind, list_all_output)
rownames(results_cw) <- NULL
out_df[[f]] <- results_cw
# plotting
c <- 0
for (var in c("Yield", "WPet", "Cycle", "ETo")) {
label <- c("Yield (ton/ha)", "CWP (kg/m^3)", "Cycle's length (Days)", "ETo (mm)")
limits <- c(ylim(0,8), ylim(0,2.5), ylim(0,300), ylim(200,900))
titles <- c("Net irrigation", "Rainfed")
c <- c+1
p <- results_cw %>%
select(Year1,Yield,WPet, Cycle, ETo, soil, RCP, Station, date) %>%
mutate(Station= case_when(Station==1212 ~ "Terai (1212)",
Station==1311~ "Terai (1311)",
Station==1206 ~ "Mid-hills (1206)",
Station==1103 ~ "High-hills (1103)"), RCP=case_when(RCP=="RCP45" ~ "RCP 4.5",
RCP=="RCP85" ~ "RCP 8.5")) %>%
mutate(date=paste0(str_extract(date, "\\d+"), "th",str_extract(date, "\\D+"))) %>%
mutate(date=ifelse(date=="1thNov", "1stNov", date), date=ifelse(date=="1thOct", "1stOct", date)) %>%
mutate(date_f=factor(.$date, levels=c("1stOct",'1stNov','15thNov', "15thDec"))) %>%
mutate(Cycle=ifelse(Cycle<0, 0, Cycle)) %>%
ggplot(aes_string("Year1",var)) +
geom_point(aes(color=soil, shape=RCP), size=1, alpha=0.2)+
geom_line(aes(color=soil, linetype=RCP), stat="smooth",size=1, method = "lm", se = FALSE)+
facet_rep_grid(Station~ date_f, repeat.tick.labels = "all")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1),text = element_text(size=10))+
theme(panel.border=element_blank(), axis.line=element_line())+
scale_color_manual(values = c("dodgerblue1","Red", "darkgreen"))+
ylab(paste0(label[c]))+
limits[[c]]+
theme(legend.title = element_blank(),legend.key.width = unit(1, "cm"))+
guides(lty = guide_legend(override.aes = list(col = 'darkgray'))) + # change line type blue color to black
xlab("Year")+
scale_x_continuous(expand=c(0,0))+
ggtitle(titles[f])+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position ="none")
plot_list[[f]][[c]] <- p
if (f==2) {
out <- plot_list[[1]][[c]] +   plot_list[[2]][[c]]
#ggsave(plot=out, file=paste0("plots_wheat/", var,"_wheat.svg"), width = 19, height = 17, units = "cm")
}
}
}
saveRDS(list_all_output, file = "../script/wheat.rds")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(glue)
library(gtools)
library(xlsx)
library(mgcv)
library(gridExtra)
library(grid)
library(RColorBrewer)
library(lemon)
library(patchwork)
source("~/theme_publication.R")
rice <- readRDS("../script/rice_extended.rds")
View(rice)
results_cw <- do.call(rbind, rice)
View(results_cw)
rownames(results_cw) <- NULL
View(results_cw)
library(tidyverse)
library(readxl)
library(lme4)
library(nlme)
source("~/theme_publication.R")
fig7b <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v3.xlsx",
sheet = 14,
skip = 7,
n_max = 49
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
fig7b <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v3.xlsx",
sheet = 14,
skip = 7,
n_max = 49
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
fig7b %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig7b,
aes(Treatments, Mean),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Luminescence (RLU)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap( ~ dpi, ncol = 2)
View(fig7b)
fig7b_2dpi <- fig7b %>%
filter(dpi==2)
mod_fig.7b <- lm(Mean~Treatments, data = fig7b_2dpi)
anova(mod_fig.7b)
posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95)
mod_fig.7b <- aov(Mean~Treatments, data = fig7b_2dpi)
anova(mod_fig.7b)
posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95)
posthoc
fig7b_5dpi <- fig7b %>%
filter(dpi==5)
mod_fig.7b <- aov(Mean~Treatments, data = fig7b_5dpi)
anova(mod_fig.7b)
posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95)
(posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95))
fig7b_2dpi <- fig7b %>%
filter(dpi==2)
mod_fig.7b <- aov(Mean~Treatments, data = fig7b_2dpi)
anova(mod_fig.7b)
stat_7b <- c(" Significant. [F(3,20)=15.213, p=2.17e-05]")
write.table(stat_7b, file = "../results/stat_fig7b.txt")
posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95)
(posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95))
write.table(stat_7b,posthoc, file = "../results/stat_fig7b.txt")
write.table(posthoc, file = "../results/stat_fig7b.txt")
capture.output(posthoc, file = "../results/stat_fig7b.txt")
mod_out <- anova(mod_fig.7b)
capture.output(posthoc,mod_out, file = "../results/stat_fig7b.txt")
write.table(posthoc,stat_7b, file = "../results/stat_fig7b.txt")
capture.output(mod_out,posthoc, file = "../results/stat_fig7b.txt")
fig7b_5dpi <- fig7b %>%
filter(dpi==5)
mod_fig.7b <- aov(Mean~Treatments, data = fig7b_5dpi)
anova(mod_fig.7b)
(posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95))
mod_out <- anova(mod_fig.7b)
fig7b_2dpi <- fig7b %>%
filter(dpi==2)
mod_fig.7b <- aov(Mean~Treatments, data = fig7b_2dpi)
mod_out <- anova(mod_fig.7b)
(posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95))
capture.output(mod_out,posthoc, file = "../results/stat_fig7b_2dpi.txt")
fig7b_5dpi <- fig7b %>%
filter(dpi==5)
mod_fig.7b <- aov(Mean~Treatments, data = fig7b_5dpi)
mod_out <- anova(mod_fig.7b)
(posthoc <- TukeyHSD(x=mod_fig.7b , 'Treatments', conf.level=0.95))
capture.output(mod_out,posthoc, file = "../results/stat_fig7b_5dpi.txt")
