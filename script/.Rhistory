for (i in seq_along(1:4)) {
C1 <- fig4d %>%
filter(dpi == i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1), as.vector(T1)))
}
fig4d <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 8,
skip = 7,
n_max = 200
) %>%
group_by(Treatments, Plant, dpi) %>%
summarise(Mean = mean(`Mean – Background*`, na.rm = TRUE)) %>%
filter(Treatments != "Ctrl") %>%
mutate(Mean = ifelse(Mean < 0, 0, Mean), Mean = Mean / 1000) %>%
mutate(
Treatments = as.factor(Treatments),
Treatments = fct_relevel(Treatments, "Low", "High")
)
View(fig4d)
for (i in seq_along(1:4)) {
C1 <- fig4d %>%
filter(dpi == i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1), as.vector(T1)))
}
for (i in seq_along(2:4)) {
C1 <- fig4d %>%
filter(dpi ==i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1), as.vector(T1)))
}
C1 <- fig4d %>%
filter(dpi ==2, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == 2, Treatments=="High") %>%
select(Mean)
View(T1)
print(t.test(as.vector(C1), as.vector(T1)))
View(T1)
View(T1)
T1 <- fig4d %>%
filter(dpi == 2, Treatments=="High") %>%
select(Mean)
View(fig4c)
for (i in seq_along(2:4)) {
C1 <- fig4d %>%
filter(dpi ==i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1$Mean), as.vector(T1$Mean)))
}
C1 <- fig4d %>%
filter(dpi ==4, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == 4, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1$Mean), as.vector(T1$Mean)))
for (i in seq_along(2:4)) {
print(i)
C1 <- fig4d %>%
filter(dpi ==i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1$Mean), as.vector(T1$Mean)))
}
for (i in 2:4) {
print(i)
C1 <- fig4d %>%
filter(dpi ==i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1$Mean), as.vector(T1$Mean)))
}
p.value <-
data.frame(
dpi = 2:4,
anova = c(
"p=0.11",
"p=0.07",
"p=0.00025"
)
)
write_csv(p.value, "../results/pvalues_fig4c.csv")
fig5b <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 9,
skip = 7,
n_max = 37
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
fig5b %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig5b,
aes(Treatments, Mean),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Luminescence (RLU)") +
facet_wrap( ~ dpi) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(
"../results/fig5b.pdf",
width = 10,
height = 12,
units = "cm"
)
ggsave(
"../results/fig5b.svg",
width = 10,
height = 12,
units = "cm"
)
fig6b <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 12,
skip = 7,
n_max = 49
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
fig6b %>%
mutate(Mean=Mean/100) %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig6b,
aes(Treatments, Mean/100),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Luminescence (RLU X 100)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap( ~ dpi, ncol = 2)
ggsave(
"../results/fig6b.pdf",
width = 10,
height = 12,
units = "cm"
)
ggsave(
"../results/fig6b.svg",
width = 10,
height = 12,
units = "cm"
)
fig6c <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 13,
skip = 7,
n_max = 49
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
fig6c %>%
mutate(Mean=Mean/1000) %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig6c,
aes(Treatments, Mean/1000),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Fluorescence (RLU X 1000)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap( ~ dpi, ncol = 2)
fig6b <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 12,
skip = 7,
n_max = 49
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
fig6b %>%
mutate(Mean=Mean/100) %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig6b,
aes(Treatments, Mean/100),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Luminescence (RLU X 100)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap( ~ dpi, ncol = 2)
fig6c <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 13,
skip = 7,
n_max = 49
) %>%
select(-Mean) %>%
rename(Mean = `Mean – Background**`)
fig6c %>%
mutate(Mean=Mean/1000) %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig6c,
aes(Treatments, Mean/1000),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Fluorescence (RLU X 1000)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap( ~ dpi, ncol = 2)
fig6c %>%
mutate(Mean=Mean/1000) %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
ggplot(aes(Treatments, Mean)) +
geom_bar(
stat = "identity",
width = 0.6,
color = "black",
fill = "red",
alpha = 0.5
) +
geom_errorbar(aes(ymin = Mean - se, ymax = Mean + se), width = 0.5) +
geom_jitter(
data = fig6c,
aes(Treatments, Mean/1000),
size = 3,
alpha = 0.6,
width = 0.1
) +
theme_Publication(base_size = 12) +
ylab("Fluorescence (RLU X 1000)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap( ~ dpi, ncol = 2)
ggsave(
"../results/fig6c.pdf",
width = 10,
height = 12,
units = "cm"
)
ggsave(
"../results/fig6c.svg",
width = 10,
height = 12,
units = "cm"
)
fig4d <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 8,
skip = 7,
n_max = 200
) %>%
group_by(Treatments, Plant, dpi) %>%
summarise(Mean = mean(`Mean – Background*`, na.rm = TRUE)) %>%
filter(Treatments != "Ctrl") %>%
mutate(Mean = ifelse(Mean < 0, 0, Mean), Mean = Mean / 1000) %>%
mutate(
Treatments = as.factor(Treatments),
Treatments = fct_relevel(Treatments, "Low", "High")
)
fig4d %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
mutate(se = se, Mean = Mean) %>%
ggplot(aes(dpi, Mean, fill = Treatments)) +
geom_bar(stat = "identity",
position = position_dodge(width = 0.9),
color = "black") +
geom_errorbar(
aes(ymin = Mean - se, ymax = Mean + se),
width = 0.3,
size = 1,
position = position_dodge(width = 0.9)
) +
geom_point(
data = fig4d,
aes(dpi, Mean, color = Treatments),
color = "black",
position = position_dodge(width = 0.9),
size = 3,
alpha = 0.6
) +
theme_Publication(base_size = 12) +
ylab("GFP (RFU X 1000)") +
theme(legend.position = "none") +
scale_fill_manual(values = c("red", "orange", "yellow")) +
ylim(0, 20)
for (i in seq_along(1:4)) {
C1 <- fig4c %>%
filter(dpi == i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4c %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1), as.vector(T1)))
}
p.value <-
data.frame(
dpi = 1:4,
anova = c(
"p=0.01",
"p=0.8",
"p=0.18",
"p=0.44"
)
)
write_csv(p.value, "../results/pvalues_fig4c.csv")
fig4d <-
read_excel(
"../data/supp_tables_dataset_AgroLux_paper_v5.xlsx",
sheet = 8,
skip = 7,
n_max = 200
) %>%
group_by(Treatments, Plant, dpi) %>%
summarise(Mean = mean(`Mean – Background*`, na.rm = TRUE)) %>%
filter(Treatments != "Ctrl") %>%
mutate(Mean = ifelse(Mean < 0, 0, Mean), Mean = Mean / 1000) %>%
mutate(
Treatments = as.factor(Treatments),
Treatments = fct_relevel(Treatments, "Low", "High")
)
fig4d %>%
group_by(Treatments, dpi) %>%
summarise(
N = n(),
sd = sd(Mean),
se = sd / sqrt(N),
Mean = mean(Mean)
) %>%
mutate(se = se, Mean = Mean) %>%
ggplot(aes(dpi, Mean, fill = Treatments)) +
geom_bar(stat = "identity",
position = position_dodge(width = 0.9),
color = "black") +
geom_errorbar(
aes(ymin = Mean - se, ymax = Mean + se),
width = 0.3,
size = 1,
position = position_dodge(width = 0.9)
) +
geom_point(
data = fig4d,
aes(dpi, Mean, color = Treatments),
color = "black",
position = position_dodge(width = 0.9),
size = 3,
alpha = 0.6
) +
theme_Publication(base_size = 12) +
ylab("GFP (RFU X 1000)") +
theme(legend.position = "none") +
scale_fill_manual(values = c("red", "orange", "yellow")) +
ylim(0, 20)
for (i in 2:4) {
print(i)
C1 <- fig4d %>%
filter(dpi ==i, Treatments=="Low") %>%
select(Mean)
T1 <- fig4d %>%
filter(dpi == i, Treatments=="High") %>%
select(Mean)
print(t.test(as.vector(C1$Mean), as.vector(T1$Mean)))
}
p.value <-
data.frame(
dpi = 2:4,
anova = c(
"p=0.11",
"p=0.07",
"p=0.00025"
)
)
write_csv(p.value, "../results/pvalues_fig4d.csv")
p.value <-
data.frame(
dpi = 1:4,
t.test = c(
"p=0.01",
"p=0.8",
"p=0.18",
"p=0.44"
)
)
write_csv(p.value, "../results/pvalues_fig4c.csv")
p.value <-
data.frame(
dpi = 2:4,
t.test = c(
"p=0.11",
"p=0.07",
"p=0.00025"
)
)
write_csv(p.value, "../results/pvalues_fig4d.csv")
